{% import _self as formMacros %}

{%- block form_label -%}
  {% if label is not same as(false) -%}
    {%- set parent_label_class = parent_label_class|default(label_attr.class|default('')) -%}
    {% if label is empty %}
      {% set label = toTranslation(id)|trans({}, translation_domain)|ucfirst %}
    {% else %}
      {% set label = label|trans({}, translation_domain)|ucfirst %}
    {% endif %}
    {%- if compound is defined and compound -%}
      {%- set element = 'legend' -%}
      {%- if 'col-form-label' not in parent_label_class -%}
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label' )|trim}) -%}
      {%- endif -%}
    {%- else -%}
      {%- set row_class = row_class|default(row_attr.class|default('')) -%}
      {%- set label_attr = label_attr|merge({for: id}) -%}
      {%- if 'col-form-label' not in parent_label_class -%}
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ('input-group' in row_class ? ' input-group-text' : ' form-label') )|trim}) -%}
      {%- endif -%}
    {%- endif -%}
  {%- endif -%}
  <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
  {%- if translation_domain is same as(false) -%}
    {%- if label_html is same as(false) -%}
      {{- label -}}
    {%- else -%}
      {{- label|raw -}}
    {%- endif -%}
  {%- else -%}
    {%- if label_html is same as(false) -%}
      {{- label|trans(label_translation_parameters, translation_domain)|ucfirst -}}&#32;{{- block('label_asterisk') }}
    {%- else -%}
      {{- label|trans(label_translation_parameters, translation_domain)|raw|ucfirst -}}&#32;{{- block('label_asterisk') }}
    {%- endif -%}
  {%- endif -%}
  </{{ element|default('label') }}>
{%- endblock form_label %}

{%- block label_asterisk -%}
  {% apply spaceless %}
    {% if required %}
      <abbr title="{{ 'forms.labels.required'|trans({}, translation_domain) }}">*</abbr>
    {% endif %}
  {% endapply %}
{%- endblock label_asterisk -%}

{%- block form_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
  {%- endif -%}
  {%- set row_class = row_class|default(row_attr.class|default('form-group')|trim) -%}
  <{{ element|default('div') }}{% with {attr: row_attr|merge({class: row_class})} %}{{ block('attributes') }}{% endwith %}>
  {%- if 'form-floating' in row_class -%}
    {{- form_widget(form, widget_attr) -}}
    {{- form_label(form) -}}
  {%- else -%}
    {{- form_label(form) -}}
    {{- form_widget(form, widget_attr) -}}
  {%- endif -%}
  {{- form_help(form) -}}
  {{- form_errors(form) -}}
  </{{ element|default('div') }}>
{%- endblock form_row %}

{% block collection_widget %}
  {% import _self as formMacros %}

  {% apply spaceless %}
    {% if prototype is defined %}
      {% set attr = attr|merge({'data-prototype-name': prototype.vars.name}) %}
      {% set attr = attr|merge({'data-prototype-label': prototype.vars.label}) %}
    {% endif %}

    {% set attr = attr|merge({'data-allow-drag-and-drop': allow_drag_and_drop ? 1 : 0}) %}
    {% set attr = attr|merge({'data-allow-add': allow_add ? 1 : 0}) %}
    {% set attr = attr|merge({'data-allow-remove': allow_delete ? 1 : 0}) %}
    {% set attr = attr|merge({'data-name-prefix': full_name}) %}
    {% set attr = attr|merge({'data-role': 'collection'}) %}

    <div
      {{ block('widget_container_attributes') }}
      {% if prototype is defined %}
        data-prototype="{{ formMacros.renderCollectionItem(prototype, allow_delete, allow_drag_and_drop)|e('html_attr') }}"
      {% endif %}
      class="card card-collection{% if allow_drag_and_drop is defined and allow_drag_and_drop %} card-collection-drag{% endif %}"
    >
      <div class="card-body">
        {{ block('collection_rows') }}
        {{ form_rest(form) }}
      </div>
    </div>
    {{ block('form_errors') }}
  {% endapply %}
{% endblock collection_widget %}

{% block collection_rows %}
  {% apply spaceless %}
    {% import _self as formMacros %}
    {{ form_errors(form) }}

    <ul data-role="collection-item-container" class="list-unstyled">
      {% for child in form %}
        {{ formMacros.renderCollectionItem(child, allow_delete, allow_drag_and_drop) }}
      {% endfor %}
    </ul>

    {% if allow_add %}
      <button type="button" class="btn btn-success btn-sm" data-role="collection-add-button">
        <i class="fas fa-plus me-2"></i> {{ 'forms.buttons.addItem'|trans|ucfirst }}
      </button>
    {% endif %}
  {% endapply %}
{% endblock collection_rows %}

{% macro renderCollectionItem(item, allow_delete, allow_drag_and_drop) %}
  <li>
    <div class="card card-collection-item collection-item" data-role="collection-item">
      <div class="card-body">
        {% if allow_drag_and_drop is defined and allow_drag_and_drop %}
          <span class="btn btn-secondary collection-item-drag-and-drop"
             title="{{ 'forms.buttons.changeOrder'|trans|ucfirst }}"
             data-role="collection-item-change-order"
          >
            <i class="fas fa-ellipsis-v"></i>
          </span>
        {% endif %}
        {{ form_widget(item) }}
        {{ form_errors(item) }}
        {% if allow_delete is defined and allow_delete %}
          <button type="button" class="btn btn-danger collection-item-delete" data-role="collection-remove-button" title="{{ 'forms.buttons.removeItem'|trans|ucfirst }}">
            <i class="fas fa-trash"></i> <span class="sr-only">{{ 'forms.buttons.removeItem'|trans|ucfirst }}</span>
          </button>
        {% endif %}
      </div>
    </div>
  </li>
{% endmacro %}

{% block image_widget %}
  {% apply spaceless %}
    <div class="form-group">
      {{ form_widget(form.file) }}
      {{ form_errors(form.file) }}
    </div>
    {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
    {% if show_preview or show_remove_image %}
      <div class="form-group">
        {% if show_preview and preview_url %}
          <img class="{% if preview_class is defined and preview_class is not empty %}{{ preview_class }}{% endif %}"
               src="{{ preview_url }}">
        {% endif %}
        {% if show_remove_image %}
          {{ form_widget(form.remove) }}
        {% endif %}
      </div>
    {% endif %}
  {% endapply %}
{% endblock %}

{% block sumoFile_widget %}
  {% apply spaceless %}
    <div class="form-group">
      {{ form_widget(form.file) }}
      {{ form_errors(form.file) }}
    </div>
    {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
    {% if show_preview or show_remove_file %}
      <div class="form-group">
        {% if show_preview and preview_url %}
          <a href="{{ preview_url }}" class="btn btn-xs btn-default" target="_blank">
            <span class="fas fa-eye" aria-hidden="true"></span>
            {{ preview_label|trans|ucfirst }}
          </a>
        {% endif %}
        {% if show_remove_file %}
          {{ form_widget(form.remove) }}
        {% endif %}
      </div>
    {% endif %}
  {% endapply %}
{% endblock %}

{% block date_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
  {{- form_label(form) -}}
  {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock date_row %}

{% block date_widget %}
  {% apply spaceless %}
    {% if widget == 'single_text' %}
      {% if datepicker %}
        {%- if not valid -%}
          {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}
        {%- endif -%}
        {%- if help is not empty -%}
          {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
        {%- endif -%}

        <div class="input-group date" id="{{ form.vars.id }}" data-target-input="nearest" data-role="date-picker">
          <input
            type="text"
            class="form-control {{ attr.class|default('')|join(' ') }} datetimepicker-input"
            data-target="#{{ form.vars.id }}"
            data-toggle="datetimepicker"
            value="{{ value }}"
            {% if minimum_date %}data-min-date="{{ minimum_date }}"{% endif %}
            {% if maximum_date %}data-max-date="{{ maximum_date }}"{% endif %}
            {{ block('widget_attributes') }}
            {% if read_only is defined and read_only %} readonly="readonly"{% endif %}
            {% if disabled %} disabled="disabled"{% endif %}
            {% if required %} required="required"{% endif %}
          >
          <div class="input-group-append" data-target="#{{ form.vars.id }}" data-toggle="datetimepicker">
            <div class="input-group-text">
              <i class="fas fa-calendar"></i>
            </div>
          </div>
          {{- form_errors(form) -}}
        </div>
        {{- form_help(form) -}}
      {% else %}
        {{ block('form_widget_simple') }}
      {% endif %}
    {% else %}
      {% if dont_render_row is not defined or not dont_render_row %}
        <div class="row date-widget">
      {% endif %}
      {% set attr = attr|merge({'class': attr.class|default('inline')}) %}
      {% set year_widget = form_widget(form.year, {'attr': {'class': attr.widget_class|default('') ~ 'year',}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) %}
      {% set month_widget = form_widget(form.month, {'attr': {'class': attr.widget_class|default('') ~ 'month'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) %}
      {% set day_widget = form_widget(form.day, {'attr': {'class': attr.widget_class|default('') ~ 'day'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) %}
      <div class="col-md-2">{{ day_widget|raw }}</div>
      <span class="pull-left date-separator">{{ divider }}</span>
      <div class="col-md-2">{{ month_widget|raw }}</div>
      <span class="pull-left date-separator">{{ divider }}</span>
      <div class="col-md-2">{{ year_widget|raw }}</div>
      {% if dont_render_row is not defined or not dont_render_row %}
        </div>
      {% endif %}
    {% endif %}
    {% if helper_text %}
      {{ block('helper_text') }}
    {% endif %}
  {% endapply %}
{% endblock date_widget %}

{% block time_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
  {{- form_label(form) -}}
  {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock time_row %}

{% block time_widget %}
  {% apply spaceless %}
    {% if widget == 'single_text' %}
      {% if timepicker is defined %}
        {%- if not valid -%}
          {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}
        {%- endif -%}
        {%- if help is not empty -%}
          {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
        {%- endif -%}
        <div class="input-group date" id="{{ form.vars.id }}" data-target-input="nearest" data-role="time-picker">
          <input
            type="text"
            class="form-control {{ attr.class|default('')|join(' ') }} datetimepicker-input"
            data-target="#{{ form.vars.id }}"
            data-toggle="datetimepicker"
            value="{{ value }}"
            {{ block('widget_attributes') }}
            {% if read_only is defined and read_only %} readonly="readonly"{% endif %}
            {% if disabled %} disabled="disabled"{% endif %}
            {% if required %} required="required"{% endif %}
          >
          <div class="input-group-append" data-target="#{{ form.vars.id }}" data-toggle="datetimepicker">
            <div class="input-group-text">
              <i class="fas fa-clock"></i>
            </div>
          </div>
          {{- form_errors(form) -}}
        </div>
        {{- form_help(form) -}}
      {% else %}
        {{ block('form_widget_simple') }}
      {% endif %}
    {% else %}
      {% set attr = attr|merge({'class': attr.class|default('')}) %}
      {% apply spaceless %}
        {% if dont_render_row is not defined or not dont_render_row %}
          <div class="row time-widget">
        {% endif %}
        <div class="col-md-2">
          {{ form_widget(form.hour, {'attr': {'size': '1'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
        </div>
        <span class='pull-left date-separator'>:</span>
        <div class="col-md-2">
          {{ form_widget(form.minute, {'attr': {'size': '1'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
        </div>
        {% if with_seconds %}
          <span class='pull-left date-separator'>:</span>
          <div class="col-md-2">
            {{ form_widget(form.second, {'attr': {'size': '1'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
          </div>
        {% endif %}
        {% if dont_render_row is not defined or not dont_render_row %}
          </div>
        {% endif %}
      {% endapply %}
    {% endif %}
    {{- form_help(form) -}}
  {% endapply %}
{% endblock time_widget %}

{% block datetime_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
  {{- form_label(form) -}}
  {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock datetime_row %}

{% block datetime_widget %}
  {% apply spaceless %}
    {% if widget == 'single_text' %}
      {% if datetimepicker is defined %}
        {%- if not valid -%}
          {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}
        {%- endif -%}
        {%- if help is not empty -%}
          {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
        {%- endif -%}
        <div class="input-group date" id="{{ form.vars.id }}" data-target-input="nearest" data-role="date-time-picker">
          <input
            type="text"
            class="form-control {{ attr.class|default('')|join(' ') }} datetimepicker-input"
            data-target="#{{ form.vars.id }}"
            data-toggle="datetimepicker"
            value="{{ value }}"
            {% if minimum_date %}data-min-date="{{ minimum_date }}"{% endif %}
            {% if maximum_date %}data-max-date="{{ maximum_date }}"{% endif %}
            {{ block('widget_attributes') }}
            {% if read_only is defined and read_only %} readonly="readonly"{% endif %}
            {% if disabled %} disabled="disabled"{% endif %}
            {% if required %} required="required"{% endif %}
          >
          <div class="input-group-append" data-target="#{{ form.vars.id }}" data-toggle="datetimepicker">
            <div class="input-group-text">
              <i class="fas fa-calendar"></i>
            </div>
          </div>
          {{- form_errors(form) -}}
        </div>
        {{- form_help(form) -}}
      {% else %}
        {{ block('form_widget_simple') }}
      {% endif %}
    {% else %}
      {% set attr = attr|merge({'class': attr.class|default('row datetime-widget')}) %}
      <div {{ block('widget_container_attributes') }}>
        {{ form_errors(form.date) }}
        {{ form_errors(form.time) }}
        <div class="col">
          {{ form_widget(form.date, {'dont_render_row': true, 'attr': {'class': attr.widget_class|default('')}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) }}
        </div>
        <div class="col">
          {{ form_widget(form.time, {'dont_render_row': true, 'attr': {'class': attr.widget_class|default('')}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
        </div>
      </div>
    {% endif %}
    {{- form_help(form) -}}
  {% endapply %}
{% endblock datetime_widget %}

{% block select_2_errors %}
  {% if errors|length > 0 -%}
    {%- for error in errors -%}
      <div class="invalid-feedback d-block">{{ error.message }}</div>
    {%- endfor -%}
  {%- endif %}
{% endblock select_2_errors %}

{% block select_2_widget %}
  <select
    name="{{ full_name }}"
    id="{{ id }}"
    {% set attr = attr|merge({'class': attr.class|default('select2')}) %}
    {{ form.vars.multiple ? 'multiple' : '' }}
    {{ block('widget_attributes') }}
  >
    {% if value is not empty %}

      {% if select2_value is iterable %}
        {% for key, value in select2_value %}
          <option value="{{ key }}" selected="selected">{{ value }}</option>
        {% endfor %}
      {% else %}
        <option value="{{ value }}" selected="selected">{{ select2_value }}</option>
      {% endif %}

    {% endif %}
  </select>
{% endblock %}
